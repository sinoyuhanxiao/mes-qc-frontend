export default {
    common: {
        searchPlaceholder: 'Search keyword',
        refreshTooltip: 'Refresh table',
        addButton: '+ New',
        cancel: 'Cancel',
        confirm: 'Confirm',
        delete: 'Delete',
        warn: 'Warning',
        info: "Information",
        operationCancelled: 'Operation Cancelled',
        view: "View",
        table: {
            id: 'ID',
            name: 'Name',
            actions: 'Actions',
            editButton: 'Edit',
            deleteButton: 'Delete',
        },
        addDialog: {
            title: 'Add',
            name: 'Name',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
        },
        editDialog: {
            title: 'Edit',
            name: 'Name',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
        },
        messages: {
            saveSuccess: 'Saved successfully!',
            saveFailed: 'Save failed',
        }
    },
    loginPage: {
        loginTitle: 'FPS Quality Control',
        usernamePlaceholder: 'Username',
        passwordPlaceholder: 'Password',
        captchaPlaceholder: 'Captcha',
        rememberMe: 'Remember Me',
        loginButton: 'Login',
        refreshCaptchaTooltip: 'Refresh Captcha',
        errorCaptcha: 'Incorrect captcha, please try again.',
        errorNoPermission: 'This user does not have permission to log in.',
        errorUserInfoFailed: 'Failed to retrieve user info. Please try again.',
        errorInvalidCredentials: 'Incorrect username or password.',
        errorGeneric: 'An error occurred during login. Please try again later.',
        loginSuccess: 'Login successful!',
        usernameMessage: 'Please input username',
        passwordMessage: 'Please input password',
        captchaMessage: 'Please input captcha',
        copyright: 'Â© 2024-2025 FPS. Quality Control for MES. All rights reserved.'
    },
    userManagement: {
        title: 'User Management',
        searchPlaceholder: 'Search keyword',
        refreshTooltip: 'Refresh User table',
        addButton: '+ New',
        cancel: 'Cancel',
        edit: 'Edit',
        confirm: 'Confirm',
        delete: 'Delete',
        operationCancelled: 'Operation Cancelled',
        table: {
            id: 'ID',
            name: 'Name',
            username: 'Username',
            teams: 'Assigned Teams',
            wecomId: 'WeCom ID',
            role: 'Role',
            status: 'Status',
            email: 'Email',
            phoneNumber: 'Phone Number',
            actions: 'Actions',
            statusTooltip: 'If inactive, the user won\'t be able to use this account',
            editButton: 'Edit',
            deleteButton: 'Delete',
            leader: 'Leader'
        },
        addDialog: {
            title: 'Add User',
            name: 'Name',
            role: 'Role',
            wecomId: 'WeCom ID',
            email: 'Email',
            phoneNumber: 'Phone Number',
            assignedTeams: 'Assigned Teams',
            status: 'Status',
            username: 'Username',
            password: 'Password',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
            assignedTeamPlaceHolder: 'Select Assigned Teams',
            selectStatusPlaceHolder: 'Select Status',
        },
        editDialog: {
            title: 'Edit User',
            name: 'Name',
            role: 'Role',
            wecomId: 'WeCom ID',
            username: 'Username',
            email: 'Email',
            phoneNumber: 'Phone Number',
            assignedTeams: 'Assigned Teams',
            status: 'Status',
            changePassword: 'Change Password',
            newPassword: 'New Password',
            confirmPassword: 'Confirm Password',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
        },
        status: {
            active: 'Active',
            inactive: 'Inactive',
        },
        validation: {
            nameRequired: 'Name is required',
            roleRequired: 'Role is required',
            wecomIdRequired: 'WeCom ID is required',
            statusRequired: 'Status is required',
            usernameRequired: 'Username is required',
            usernameMinLength: 'Username must be at least 4 characters',
            passwordRequired: 'Password is required',
            passwordMinLength: 'Password must be at least 4 characters',
            passwordsNotMatch: 'Passwords do not match or are empty!',
            usernameExists: 'This username already exists',
            emailRequired: 'Email is required',
            emailFormat: 'Invalid email format',
            phoneNumberRequired: 'Phone number is required',
            phoneNumberFormat: 'Invalid phone number format',
            selfDeactivationSuccess: 'Your account has been successfully deactivated. You will not be able to log in after logging out.'
        },
        messages: {
            userAddedSuccess: 'User added successfully',
            userAddedFailed: 'Failed to add user',
            userUpdatedSuccess: 'User updated successfully',
            userUpdatedFailed: 'Failed to update user',
            userDeletedSuccess: 'User deleted successfully',
            teamsUpdatedSuccess: 'Teams updated successfully',
            teamsUpdateFailed:  'Failed to update teams',
            selfDeactivationWarning: 'You are deactivating your own account. Are you sure you want to proceed?',
            selfDeletionWarning: 'You are deleting your own account and your association with teams. Are you sure you want to proceed?',
            deletionConfirmation: 'Are you sure you want to delete the user "{name}" as well as the association with teams?',
            deletionCanceled: 'Deletion canceled',
            selfDeletionCanceled: 'Self-deletion canceled',
            statusUpdatedSuccess: 'Status updated successfully',
            statusUpdatedFailed:  'Failed to update status',
            selfDeactivationTitle: 'Self Deactivation',
            deletionTitle: 'Deletion',
            validationErrors: 'Please fix validation errors before proceeding',
            deactivationFailed: 'Failed to deactivate account',
            pleaseCorrectErrors: 'Please correct the errors.',
            passwordNotMatchOrFewerCharacters: 'Password does not match or fewer than 4 characters',
            yourAccountIsDeletedAndUnableToLogin: 'Your account is deleted, once you log out you are not able to log in.',
            deletionFailed: 'Deletion failed'
        },
        role: {
            admin: 'Administrator',
            qcWorker: 'QC Worker',
            unknown: 'Unknown Role',
            selectRowPlaceHolder: 'Select User Role'
        },
    },
    pagination: {
        total: 'Total {total}',
        perPage: '/page'
    },
    navigationMenu: {
        home: "Home",
        systemManagement: "System Management",
        userManagement: "User",
        teamManagement: "Team",
        shiftManagement: "Shift",
        qualityManagement: "Quality Management",
        formManagement: "Form Tree",
        approvalCenter: "Approval Center",
        formDesigner: "Form Designer",
        formAccessCalendar: "Form Access Calendar",
        dispatchManagement: "Task Dispatch",
        instrumentManagement: "Instrument",
        testSubjectManagement: "Test Subject",
        samplingLocationManagement: "Sampling Location",
        dataSummary: "Form Summary",
        QcSummary: "QC Summary",
        taskCenter: "My Task Center",
        taskDashboard: "Dashboard",
        pendingTasks: "Pending Tasks",
        todayTasks: "Today's Tasks",
        futureTasks: "Future Tasks",
        historyTasks: "History Tasks",
        overdueTasks: "Overdue Tasks",
        taskCalendar: "Task Calendar",
        alarmRecords: "Alarm Records",
        formDataSummary: "Form Data Summary",
        logout: "Logout",
        userRole: "User Role",
        username: "Username",
        collapse: "Collapse",
        expand: "expand",
        logoutConfirmationMessage: "Are you sure to logout?",
        logoutConfirmationTitle: "Logout Confirmation"
    },
    teamManagement: {
        title: 'Team Management',
        searchPlaceholder: 'Search Teams',
        refreshTooltip: 'Refresh Team table',
        addButton: '+ New',
        cancel: 'Cancel',
        edit: 'Edit',
        confirm: 'Confirm',
        delete: 'Delete',
        actions: 'Actions',
        membersTab: 'Members',
        formsTab: 'Associated Forms',
        table: {
            id: 'ID',
            name: 'Name',
            type: 'Type',
            leader: 'Team Leader',
            startTime: 'Start Time',
            endTime: 'End Time',
            status: 'Status',
            description: 'Description',
            actions: 'Actions',
            statusTooltip: 'Active/Inactive status of the team',
            editButton: 'Edit',
            deleteButton: 'Delete',
            viewMembers: 'Members',
            viewTeam: 'View',
            createdAt: 'Created At'
        },
        addDialog: {
            title: 'Add Team',
            name: 'Name',
            type: 'Type',
            leader: 'Team Leader',
            startTime: 'Start Time',
            endTime: 'End Time',
            members: 'Members',
            forms: 'Associated Forms',
            description: 'Description',
            status: 'Status',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
            selectLeaderPlaceholder: 'Select Team Leader',
            selectStatusPlaceholder: 'Select Status',
            selectMembers: 'Select Members',
        },
        editDialog: {
            title: 'Edit Team',
            name: 'Name',
            type: 'Type',
            leader: 'Team Leader',
            startTime: 'Start Time',
            endTime: 'End Time',
            members: 'Members',
            forms: 'Associated Forms',
            description: 'Description',
            status: 'Status',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
            selectLeaderPlaceholder: 'Select Team Leader',
            selectMembersPlaceholder: 'Select Members',
            selectStatusPlaceholder: 'Select Status',
        },
        status: {
            active: 'Active',
            inactive: 'Inactive',
        },
        validation: {
            nameRequired: 'Name is required',
            typeRequired: 'Type is required',
            leaderRequired: 'Team Leader is required',
            startTimeRequired: 'Start Time is required',
            endTimeRequired: 'End Time is required',
        },
        messages: {
            teamAddedSuccess: 'Team added successfully',
            teamUpdatedSuccess: 'Team updated successfully',
            teamDeletedSuccess: 'Team deleted successfully',
            teamDeletionFailed: 'Failed to delete team',
            teamEditedSuccess:  'Team edited successfully',
            teamEditedFailed: 'Failed to edit team',
            membersUpdatedSuccess: 'Team members updated successfully',
            deletionConfirmation: 'Are you sure you want to delete the team "{name}" and disconnect all its relationships with members?',
            teamDeletionCancelled: 'Team deletion canceled',
            validationErrors: 'Please fix validation errors before proceeding',
            statusUpdatedSuccess: 'Status updated successfully',
            statusUpdatedFailed:  'Failed to update status'
        },
    },
    shiftManagement: {
        title: 'Shift Management',
        searchPlaceholder: 'Search shifts',
        refreshTooltip: 'Refresh shift table',
        shift: 'Shift',
        shiftId: 'Shift ID',
        graceMinute: 'Grace Period',
        graceTimeMinute: 'Grace Period (Minute)',
        editShift: 'Edit Shift',
        addShift: 'Add New Shift',
        namePlaceholder: 'Enter shift name',
        descriptionPlaceholder: 'Enter shift description',
        startTime: 'Start Time',
        endTime: 'End Time',
        startTimePlaceholder: 'Select shift start time',
        endTimePlaceholder: 'Select shift end time',
        validation: {
            nameRequired: 'Shift name is required',
            startTimeRequired: 'Start time is required',
            endTimeRequired: 'End time is required',
        }
    },
    FormTree: {
        title: 'Form Tree',
        searchPlaceholder: 'Search name',
        edit: 'Edit',
        cancelEdit: 'Cancel Edit',
        addRoot: '+ New',
        add: 'Add',
        delete: 'Delete',
        deleteConfirmTitle: 'Delete Confirmation',
        deleteConfirmContent: 'Are you sure you want to delete ',
        cancel: 'Cancel',
        confirm: 'Confirm',
        appendDialogTitle: 'Add node to {parent}',
        namePlaceholder: 'Enter node name',
        typePlaceholder: 'Select node type',
        type: {
            folder: 'Folder',
            document: 'QC Form'
        },
        nameRequired: 'Name cannot be empty!',
        duplicateWarningTitle: 'Warning',
        duplicateWarningMessage: 'Duplicate name exists, do you want to continue?',
        duplicateContinue: 'Continue',
        duplicateCancel: 'Cancel',
        addSuccess: 'Node added successfully!',
        addFailed: 'Failed to add node',
        deleteSuccess: 'Deleted successfully!',
        deleteFailed: 'Failed to delete node',
        loadFailed: 'Failed to load data',
        errorTitle: 'Error',
        pleaseSelectFolder: 'Please select the folder',
        selectFolder: 'Select Folder'
    },
    FormDisplay: {
        titlePrefix: 'Form',
        available: 'Able to use',
        unavailable: 'Unable to use',
        quickDispatch: 'Quickly assign this task',
        countdownTitle: 'Task Countdown:',
        eSignature: 'E-Signature',
        clearSignature: 'Clear Signature',
        submit: 'Submit',
        reset: 'Reset',
        confirmSubmissionTitle: 'Confirm Submission',
        confirmSubmissionMessage: 'Are you sure you want to submit this form?',
        confirm: 'Confirm',
        cancel: 'Cancel',
        submissionSuccessTitle: 'Form Submitted Successfully',
        submissionSuccessMessage: 'Your form has been successfully submitted. Do you want to reset the form?',
        yes: 'Yes',
        no: 'No',
        resetConfirmTitle: 'Confirm Reset Form',
        resetConfirmMessage: 'Are you sure you want to reset the form? All entered data will be cleared!',
        formClearedSuccess: 'Form has been cleared!',
        countdownEndedTitle: 'Task Ended',
        countdownEndedMessage: 'Task has ended. The window will now close.',
        quickDispatchDialogTitle: 'Quick Dispatch for This Form Task',
        formSubmitSuccess: 'Form submitted successfully!',
        formSubmitError: 'Error inserting form data!',
        formLoadSuccess: 'Form loaded successfully!',
        formLoadFailed: 'Failed to load form template!',
        formLoadError: 'Error fetching form template!'
    },
    FormDesigner: {
        saveDialog: {
            title: 'Save QC Form',
            formNameLabel: 'QC Form Name',
            formNamePlaceholder: 'Please enter the QC form name...',
            cancel: 'Cancel',
            confirm: 'Save'
        },
        validation: {
            formNameRequired: 'QC form name cannot be empty!',
            folderRequired: 'Please select a folder.'
        }
    },
    formAccessCalendar: {
        title: 'Form Access Calendar',
    },
    orderManagement: {
        Id: 'ID',
        name: 'Name',
        status: 'Status',
        type: 'Type',
        createdAt: 'Created At',
        createdBy: 'Created By',
        updatedAt: 'Updated At',
        updatedBy: 'Updated By',
        title: 'Order Management',
        searchPlaceholder: 'Search By Keyword',
        refreshTooltip: 'Refresh Order table',
        addButton: '+ New',
        viewDispatchedTaskButton: 'View Dispatched Tasks',
        state: 'State',
        cancel: 'Cancel',
        edit: 'Edit',
        confirm: 'Confirm',
        pauseDispatch: 'Pause Dispatch',
        resumeDispatch: 'Resume Dispatch',
        delete: 'Delete',
        reset: 'Reset',
        dispatchPlan: 'Dispatch Plan',
        dispatchPlanList: 'Dispatch Plans',
        dispatchPlanName: 'Dispatch Plan Name',
        tabTitleQcOrderForm: 'QC Order Form',
        plan: 'plan',
        dispatchPlanId: 'Dispatch Plan ID',
        orderId: 'Order ID',
        description: 'Description',
        uncheckAll: 'Uncheck All',
        refreshList: 'Refresh List',
        editOrder: 'Edit Order',
        addOrder: 'Add New Order',
        orderDetail: 'Order Detail',
        formNodeId: 'Form Node ID',
        formName: 'Form Name',
        productCode: 'Product Code',
        unitSalesPrice: 'Unit Sales Price',
        unitResourceCost: 'Unit Resource Cost',
        quantity: 'Quantity',
        code: 'Code',
        unitPrice: 'Unit Price',
        minimumInventory: 'Minimum stock',
        currentStock: 'Current Stock',
        availableStock: 'Available Stock',
        heldStock: 'Held Stock',
        vendorId: 'Vendor ID',
        unscheduledQuantity: 'Unscheduled Quantity',
        approvedAt: 'Approved At',
        estimatedProductionTime: 'Estimated Production Time',
        productionLine: 'Production Line',
        productionLineId: 'Production Line ID',
        recurrenceUuid: 'UUID',
        locationId: 'Location ID',
        serialNumber: 'Serial Number',
        hour: 'hour',
        dueDate: 'Due Date',
        estimatedMinutes: 'Estimated Minutes',
        noDispatchedTasks: 'No Dispatched Tasks',
        viewSubmissionRecords: 'View Submission Records',
        unknownPlan: 'Unknown Plan Type',
        orderTable: {
            name: 'Name',
            state: 'State',
            associatedUsers: 'Associated Users',
            associatedForms: 'Associated Forms',
            planCount: 'Plan Count',
        },
        dispatchedTaskTable:{
            actions: 'Actions',
            id: 'ID',
            dispatchId: 'Dispatch Plan ID',
            name: 'Task Name',
            user: 'User',
            form: 'Form',
            state: 'State',
            dispatchTime: 'Dispatch Time',
            remainingTime: 'Remaining Time',
        },
        orderDetailDialog: {
            orderDetailDivider: 'Order Detail',
            dispatchesDivider: 'Dispatch Plan',
            dispatchConfigDivider: 'Dispatch Scheduling',
            taskConfigDivider: 'Task Config',
            systemAssociationDivider: 'System Association',
            dispatchedTasksDivider: 'Dispatched Tasks',
            orderName: 'Order Name',
            planName: 'Plan Name',
            planId: 'Plan Id',
            executionLogic: 'Dispatching Frequency',
            executedCount: 'Executed Count',
            periodStartTime: 'Start Time',
            periodEndTime: 'End Time',
            dispatchLimit: 'Dispatch Limit',
            taskDueDateOffset: 'Task Deadline (Minute)',
            nextDispatchTime: 'Next Dispatch Time'
        },
        orderFormDialog: {
            orderNamePlaceholder: 'Please fill in order name',
            descriptionPlaceholder: 'Please fill in description',
            dispatchPlanNamePlaceholder: 'Please fill in dispatch plan name',
            executionPeriod: 'Execution Period',
            executionTime: 'Dispatching Time',
            executionTimePlaceholder: 'Please select dispatching Time',
            oneTimePlan: 'One Time Plan',
            periodicPlan: 'Periodic Plan',
            limited: 'Limited',
            unlimited: 'Unlimited',
            product: 'Product',
            productPlaceholder: 'Please select associated product',
            productionWorkOrder: 'Product Work Order',
            productionWorkOrderPlaceholder: 'Please select associated production work order',
            rawMaterial: 'Raw Material',
            rawMaterialPlaceholder: 'Please select associated rawMaterial',
            maintenanceWorkOrder: 'Maintenance Work Order',
            maintenanceWorkOrderPlaceholder: 'Please select associated maintenance work order',
            equipment: 'Equipment',
            equipmentPlaceholder: 'Please select associated equipment',
            productionModuleDivider: 'Production Module Association',
            maintenanceModuleDivider: 'Maintenance Module Association',
            searchFormPlaceholder: 'Search Form',
            searchUserPlaceholder: 'Search User',
            addDispatchButton: 'Add Dispatch Plan',
            addDispatchByTeamButton: 'Add Plan By Team',
            collapseButton: 'Collapse',
            expandButton: 'Expand',
            deleteDispatchButton: 'Delete Dispatch Plan',
            orderPreview: 'Order Preview',
            uncheckAll: 'Uncheck All',
            userSelectPlaceholder: 'Please select user',
            team: 'Team',
            taskDueDateOffset: 'Task deadline: {input} minutes',
            missing: 'missing',
            unknownTeam: 'Unknown Team',
            unknownUser: 'Unknown User',
            unknownForm: 'Unknown Form',
            unknownExecutionLogic: 'Unknown Dispatching Frequency',
        },
        teamPopulatePlanDialog: {
            title: 'Please select team to populate dispatch plan',
            selectTeamPlaceholder: 'Please select team',
            teamPlanExecutionLogic: 'Dispatching frequency: everyday at 00:00',
            teamPlanDueDate: 'Task deadline: 24 hours',
            associatedFormCount: 'Associated forms count',
            associatedUserCount: 'Associated users count',
        },
        qcOrderState: {
            active: 'Active (Dispatch plans running)',
            inactive: 'Inactive (No active dispatch plans)',
            allExpired: 'All dispatch plans expired',
            allLimitsReached: 'All plans reached dispatch limit',
            allPaused: 'All dispatch plans paused',
            invalid: 'Invalid (Some plans are invalid)'
        },
        dispatchPlanState: {
            running: 'Running',
            inactive: 'Inactive',
            expired: 'Expired',
            limitReached: 'Dispatch limit reached',
            paused: 'Paused',
            invalid: 'Invalid'
        },
        validation: {
            orderNameRequired: 'Order name is required',
            executionPeriodRequired: 'Execution period is required',
            executionTimeRequired: 'Dispatching time is required',
            userRequired: 'At least one user is required',
            formRequired: 'At least one form is required',
            dispatchLimitInputRequired: 'Input for dispatch total limit is required',
            dueDateOffsetMinuteRequired: 'Input for task due date offset is required'
        },
        messages: {
            orderAddedSuccess: 'Order added successfully',
            orderUpdatedSuccess: 'Order updated successfully',
            orderDeletedSuccess: 'Order deleted successfully',
            dispatchPausedSuccess: 'Dispatch plan paused successfully',
            dispatchPausedFailed: 'Failed to pause dispatch plan',
            dispatchResumedSuccess: 'Dispatch plan resumed successfully',
            dispatchResumedFailed: 'Failed to resume dispatch plan',
            validationErrors: 'Please fill all required fields before proceeding',
            editConfirmation: 'Are you sure you want to edit?',
            submitConfirmation: 'Are you sure you want to submit?',
            submitEditedOrderConfirmation: 'Are you sure you want to submit? All unstarted tasks will be canceled and restart dispatching based on the current settings',
            deleteConfirmation: 'Are you sure you want to delete?',
            resetConfirmation: 'Are you sure you want to reset?',
            pauseDispatchConfirmation: 'Are you sure you want to pause this dispatch plan?',
            resumeDispatchConfirmation: 'Are you sure you want to resume this dispatch plan?',
            errorLoadingOrderList: 'Error loading orders list',
            errorHandlingOrderSubmission: 'Error submitting the order',
            errorLoadingAllData: 'Error loading all data',
            errorLoadingFormTree: 'Error loading form tree',
            errorLoadingUsersData: 'Error loading users data',
            errorLoadingTeamData: 'Error loading teams data',
            selectAtLeastOneOrderToDelete: 'Please pick at least one order to delete',
            messageTitle: 'Information',
            listRefreshed: 'List refreshed',
            missingRequiredField: 'Please fill all required fields before proceeding',
        },
    },
    instrumentManagement: {
        title: 'Instrument Management',
        instrument: 'Instrument',
        instrumentId: 'Instrument ID',
        type: 'Instrument Type',
        typePlaceholder: 'Please input instrument type',
        modelNumber: 'Model Number',
        modelNumberPlaceholder: 'Please input model number',
        vendor: 'Vendor',
        vendorPlaceholder: 'Please input vendor',
        editInstrument: 'Edit Instrument',
        addInstrument: 'Add Instrument',
        namePlaceholder: 'Please input instrument name',
        descriptionPlaceholder: 'Please input instrument description',
        validation: {
            nameRequired: 'Instrument name is required',
        }
    },
    testSubjectManagement: {
        title: 'Test Subject Management',
        testSubject: 'Test Subject',
        testSubjectId: 'Test Subject ID',
        editTestSubject: 'Edit Test Subject',
        addTestSubject: 'Add Test Subject',
        namePlaceholder: 'Please input test subject name',
        descriptionPlaceholder: 'Please input test subject description',
        validation: {
            nameRequired: 'Test subject name is required',
        }
    },
    samplingLocationManagement: {
        title: 'Sampling Location Management',
        samplingLocation: 'Sampling Location',
        samplingLocationId: 'Sampling Location ID',
        editSamplingLocation: 'Edit Sampling Location',
        addSamplingLocation: 'Add Sampling Location',
        namePlaceholder: 'Please input sampling location name',
        descriptionPlaceholder: 'Please input sampling location description',
        validation: {
            nameRequired: 'Sampling location name is required'
        }
    },
    FormDataSummary: {
        loadingText: "Generating PDF report...",
        summaryTitle: "Summary",
        dateRangeSeparator: "to",
        startPlaceholder: "Start Date",
        endPlaceholder: "End Date",
        generatePdf: "Generate PDF",
        viewRecords: "View QC Records",
        recordTable: {
            groupUncategorized: "QC General Fields",
            groupBasicInfo: "QC Basic Info",
            groupSystemInfo: "System Submission Info",
            submitter: "Submitter",
            submittedAt: "Submission Time",
            submissionId: "Submission ID",
            groupQcDetails: "QC Form Records",
            actions: "Actions",
            view: "View",
            delete: "Delete",
            deleteConfirmTitle: "Confirm Deletion",
            deleteConfirmMessage: "Are you sure you want to delete submission ID {id}?",
            deleteSuccess: "Record deleted successfully!",
            deleteCanceled: "Deletion canceled",
            deleteFailed: "Deletion failed. Please try again",
            exportExcel: "Export to Excel",
            searchPlaceholder: "Search...",
            closeButton: "Close"
        },
        detailDialog: {
            titleSuffix: "Submission Records",
            uncategorized: "Uncategorized",
            submitter: "Submitter",
            submittedAt: "Submission Time",
            signatureTitle: "Inspector Signature:",
            cancelButton: "Cancel",
            exportButton: "Export"
        },
        shortcuts: {
            thisWeek: "This Week",
            thisMonth: "This Month",
            lastMonth: "Last Month",
            lastThreeMonths: "Last 3 Months"
        },
        messages: {
            noChartData: "No chart data to export!",
            exportSuccess: "PDF downloaded successfully!",
            exportFailed: "PDF generation failed. Please try again!",
            noExcelData: "No data to export",
            exportExcelSuccess: "Excel exported successfully!",
            selectRecordToExport: "Please select a record to export!"
        }
    },
    Export: {
        titleSuffix: 'Submission Records',
        groupTitle: 'QC Submission Info',
        signatureTitle: 'Inspector Signature:',
        tableHead: ['QC Field', 'QC Result'],
        tableHeadValidRange: ['QC Field', 'QC Result', 'Valid Range'],
        fallback: ' - ',
        systemInfo: {
            submitter: 'Submitter',
            submittedAt: 'Submission Time',
            submissionId: 'Submission ID'
        }
    },
    TaskCenterDashboard: {
        pageTitle: "{name}'s Task Dashboard",
        newButton: "New",
        filterButton: "Filter",
        developingMessageTitle: "Notice",
        developingMessageContent: "This feature is under development. Thank you for your click.",
        confirmButton: "OK",
        todayTasksTitle: 'My Today Tasks',
        todayTasksTooltip: 'Number of tasks today',
        futureTasksTitle: 'My Future Tasks',
        futureTasksTooltip: 'Number of future tasks',
        historicalTasksTitle: 'My Historical Tasks',
        overdueTasksTitle: 'My Overdue Tasks',
        comparedToYesterday: 'Compared to yesterday',
        percentageChange: 'Percentage Change',
        navigateTo: 'Navigate to',
        taskCardTooltip: 'Task card details',
        statisticFooterText: 'Compared to yesterday',
        noData: 'No data available'
    },
    TaskCenter: {
        quarterlyTaskCountLabel: 'Quarterly Task Assignment Count',
        taskStatusLabels: ['Pending', 'In Progress', 'Completed'],
        notAvailable: 'Not Available Yet',
        pageTitle: "{name}'s Task Dashboard",
        newButton: "+ New",
        filterButton: "Filter",
        developingMessageContent: "This feature is under development. Thank you for your click.",
        developingMessageTitle: "Feature Under Development",
        confirmButton: "OK",
        futureTasksTitle: "Future Tasks",  // New title for future tasks
        historicalTasksTitle: "Historical Tasks",  // New title for historical tasks
        overdueTasksTitle: "Overdue Tasks",  // New title for overdue tasks
        todayTasksTitle: "Today's Tasks"  // New title for today's tasks
    },
    MyTaskTable: {
        taskListTitle: "Task List",
        columnNames: {
            qc_form_tree_node_id: "Task Form",
            dispatched_task_state_id: "Task Status",
            name: "Task Name",
            remaining_time: "Remaining",
            due_date: "Due Date",
            description: "Task Description",
            notes: "Notes",
            dispatch_time: "Dispatch Time",
            user_id: "Assigned To",
            created_at: "Creation Time",
            created_by: "Dispatched By",
            updated_at: "Last Updated Time",
            updated_by: "Updated By",
            status: "Archived Status",
            id: "Task Number",
            dispatch_id: "Dispatch Plan Number",
            is_overdue: "Is Overdue",
            finished_at: "Completion Time"
        },
        refreshTableTooltip: "Refresh Table",
        usableTaskText: "Doable Tasks",
        allTasksText: "All Tasks",
        alreadyRefreshed:  "Tasks refreshed",
        taskCompletionConfirmation: "If you mark this task as completed, you will not be able to fill the form again.",
        taskCompletionConfirmationTitle: "Confirm Completion",
        taskMarkedCompleted: "Task has been marked as completed",
        taskCompletionCancelled: "Task completion cancelled",
        taskNotFillable: "This task is not fillable",
        filterPlaceholder: "Search by Task Form Name",
        featureDevelopementMessage:  "This feature is under development. Thank you for your click.",
        unableToLoad: "Unable to load, please retry",
        taskUpdateSuccess: "Status updated",
        taskCompletionStatus: {
            pending: "Pending",
            inProgress: "In Progress",
            completed: "Completed",
            canceled: "Canceled",
            overdue: "Overdue"
        },
        taskDetails: "Details",
        taskEdit: "Edit",
        markComplete: "Complete",
        taskStateInfo: "The following three situations will prevent you from filling the task:",
        overdueMessage: "Task has expired",
        dueSoonMessage: "Task's due time is more than 60 minutes in the future",
        completedMessage: "Task is already completed",
        unknownForm: "Unknown form",
        messages: {
            reachDeadlineSoon: "You have {count} tasks due soon.",
            totalTasksNotice: "You have {count} tasks for today."
        },
        time: {
            day: 'day',
            hour: 'hour',
            minute: 'minute',
            second: 'second'
        }
    },
    signature: {
        title: 'Signature',
        submit: 'Submit',
        reset: 'Reset',
        empty_alert: 'Signature cannot be blank. Please sign first!'
    },
    qcTaskSubmissionLogs: {
        searchPlaceholder: 'Search ID or Submission ID',
        title: 'Submission Details',
        systemInfoGroupTitle: 'QC Submission Info',
        submitter: 'Submitter',
        submittedAt: 'Submission Time',
        signatureTitle: 'Inspector Signature:',
        cancelButton: 'Cancel',
        exportButton: 'Export',
        submissionRecordSuffix: ' - Submission Records',
        tableHeaders: {
            id: 'ID',
            submission_id: 'Submission ID',
            created_at: 'Submission Time',
            created_by: 'Submitter ID',
            comment: 'Comment',
            dispatched_task_id: 'Task ID',
            qc_form_template_id: 'QC Form ID',
            status: 'Status'
        },
        exportPdf: {
            titleSuffix: ' - Submission Record',
            tableHead: ['QC Field', 'QC Result'],
            groupTitle: 'QC Submission Info',
            submitter: 'Submitter',
            submittedAt: 'Submission Time',
            submissionId: 'Submission ID',
            signatureTitle: 'Inspector Signature:',
            successMessage: 'PDF exported successfully!',
            failMessage: 'Failed to export PDF. Please try again!'
        }
    },
    TaskDetail: {
        viewSubmissionLog: 'View Submission Log',
        taskName: 'Task Name',
        unnamedTask: 'Unnamed Task',
        description: 'Description',
        noDescription: 'No Description',
        dispatchPlanId: 'Dispatch Plan ID',
        formName: 'Task Form',
        formId: 'Node ID',
        assignee: 'Assignee',
        dispatchTime: 'Dispatch Time',
        taskStatus: 'Task Status',
        notes: 'Notes',
        createdAt: 'Created At',
        createdBy: 'Created By',
        updatedAt: 'Updated At',
        updatedBy: 'Updated By',
        dueDate: 'Due Date',
        finishTime: 'Finished At',
        notFinished: 'Not Finished',
        testSubject: 'Test Subjects',
        samplingLocation: 'Sampling Locations',
        instrument: 'Instruments',
        unknownForm: 'Unknown Form',
        unknownUser: 'Unknown Personnel',
        status: {
            1: 'Pending',
            2: 'In Progress',
            3: 'Completed',
            4: 'Canceled',
            5: 'Overdue',
            unknown: 'Unknown'
        },
        popover: {
            id: 'ID',
            description: 'Comment',
            status: 'Status',
            createdBy: 'Created By',
            createdAt: 'Created At',
            updatedBy: 'Updated By',
            updatedAt: 'Updated At',
            modelNumber: 'Model Number',
            manufacturer: 'Manufacturer',
            type: 'Instrument Type'
        }
    }
};
